function COMPLIANCE = loadCompliance(subjects)
%IMPORTFILE Import data from a spreadsheet
%   [Subject,Compliance_7,Compliance_11,Compliance_25,Compliance_39,Compliance_52,ActivityIntensity,ActivityDuration]
%   = IMPORTFILE(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as column
%   vectors.
%
%   [Subject,Compliance_7,Compliance_11,Compliance_25,Compliance_39,Compliance_52,ActivityIntensity,ActivityDuration]
%   = IMPORTFILE(FILE,SHEET) reads from the specified worksheet.
%
%   [Subject,Compliance_7,Compliance_11,Compliance_25,Compliance_39,Compliance_52,ActivityIntensity,ActivityDuration]
%   = IMPORTFILE(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Non-numeric cells are replaced with: NaN
%
% Example:
%   [Subject,Compliance_7,Compliance_11,Compliance_25,Compliance_39,Compliance_52,ActivityIntensity,ActivityDuration] = importfile('Compiled_Wk52Compliance.xlsx','Sheet1',2,70);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2021/03/26 17:28:44

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 70;
end

%% Import the data
fileName = 'W:\OA_GaitRetraining\DATA\CompiledData\Compiled_Wk52Compliance.xlsx' ;
[~, ~, raw] = xlsread(fileName, sheetName, sprintf('A%d:H%d',startRow(1),endRow(1)));
for block=2:length(startRow)
    [~, ~, tmpRawBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:H%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
subArray = data(:,1) ;
[vals,subInds] = intersect(subArray,subjects,'stable') ;
COMPLIANCE.subjects = data(subInds,1);
COMPLIANCE.weeks = [7 11 25 39 52] ;
COMPLIANCE.Compliance = data(subInds,2:6);
COMPLIANCE.ActivityIntensity = data(subInds,7);
COMPLIANCE.ActivityDuration = data(subInds,8);

